services:
  # PostgreSQL Database (Neon-compatible for local development)
  db:
    image: postgres:16-alpine
    container_name: pdf-editor-db
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-pdf_editor}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password123}
      POSTGRES_DB: ${DB_NAME:-pdf_editor_development}
      # Neon-like configuration
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-pdf_editor} -d ${DB_NAME:-pdf_editor_development}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pdf-editor-network

  # Redis removed - Rails 8 uses Solid Cache, Solid Queue, and Solid Cable instead



  # Rails Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: pdf-editor-web
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      # Database
      DATABASE_URL: "postgresql://${DB_USER:-pdf_editor}:${DB_PASSWORD:-password123}@db:5432/${DB_NAME:-pdf_editor_development}"
      # Rails Development
      RAILS_ENV: development
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      WEB_CONCURRENCY: 0
      RAILS_MAX_THREADS: 5
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_LOG_TO_STDOUT: "true"
      BOOTSNAP_CACHE_DIR: /tmp/bootsnap
      HISTFILE: /app/log/.bash_history
      EDITOR: vi
      # Bundle configuration
      BUNDLE_PATH: /usr/local/bundle
      BUNDLE_APP_CONFIG: /usr/local/bundle
    volumes:
      # Mount source code for hot reload
      - .:/app:cached
      # Persist bash history
      - ./log/.bash_history:/root/.bash_history
      # Cache volumes for performance
      - bundle_cache:/usr/local/bundle
      - node_modules:/app/node_modules
      - rails_cache:/app/tmp/cache
      - rails_storage:/app/storage
      # Exclude tmp directory from mount
      - /app/tmp
    depends_on:
      db:
        condition: service_healthy
    # Command is handled by Dockerfile CMD
    stdin_open: true
    tty: true
    networks:
      - pdf-editor-network

  # Background jobs handled by Solid Queue (built into Rails app)

  # Mailhog for email testing in development
  mailhog:
    image: mailhog/mailhog:latest
    container_name: pdf-editor-mailhog
    restart: unless-stopped
    networks:
      - pdf-editor-network

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pdf-editor-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pdf-editor-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  # redis_data volume removed
  bundle_cache:
    driver: local
  node_modules:
    driver: local
  rails_cache:
    driver: local
  rails_storage:
    driver: local
  pgadmin_data:
    driver: local

networks:
  pdf-editor-network:
    driver: bridge